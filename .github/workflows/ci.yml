name: CI
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    name: CI
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-11
            output_filename: htmark-out
            uploaded_filename: htmark-osx-x86_64
            llvm_bin_path: /usr/local/opt/llvm/bin

          - os: ubuntu-20.04
            output_filename: htmark-out
            uploaded_filename: htmark-linux-x86_64
            llvm_bin_path: /usr/lib/llvm-13/bin

          - os: windows-2022
            output_filename: htmark-out.exe
            uploaded_filename: htmark-windows-x86_64
            llvm_bin_path: C:\Program Files\LLVM\bin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: coursier/cache-action@v6      

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' 
          java-version: '17'

      - name: Setup
        run: |
          PLATFORM="$(uname)"

          if [ $PLATFORM == "Darwin" ]; then
            echo "It's a Mac"
            brew install llvm
          else
            echo "It's a Linux"
            sudo apt update
            sudo apt install lsb-release wget software-properties-common
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
            sudo add-apt-repository "deb http://apt.llvm.org/focal/     llvm-toolchain-focal-13   main"
            sudo apt-get update 
            sudo apt-get install clang-13 lldb-13 libclang-13-dev llvm-13-dev
          fi
        if: runner.os != 'Windows'

      - name: Build binary (unix like)
        run: sbt nativeLink
        if: runner.os != 'Windows'
      
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 4GB
          maximum-size: 16GB
        if: runner.os == 'Windows'

      - name: Setup windows
        shell: pwsh
        run: |
          choco install llvm --version=13.0.0 --allow-downgrade
          choco install sbt --version=1.6.1
          clang --version
        if: runner.os == 'Windows'

      - name: CI (windows)
        run: sbt nativeLink
        shell: cmd
        if: runner.os == 'Windows'
        env: 
          LLVM_BIN: ${{ matrix.llvm_bin_path }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          path: ./target/scala-3.1.2/${{ matrix.output_filename }}
          name: ${{ matrix.uploaded_filename }}
